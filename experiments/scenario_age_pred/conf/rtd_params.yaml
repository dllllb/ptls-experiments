device: cuda

data_module: 
  _target_: ptls.data_load.data_module.rtd_data_module.RtdDataModuleTrain
  type: map
  setup: 
    col_id: client_id
    dataset_files: 
      data_path: ${hydra:runtime.cwd}/data/train_trx_file.parquet
    split_by: files
    valid_size: 0.05
    valid_split_seed: 42
  train: 
    min_seq_len: 25
    augmentations: 
      - 
        - DropoutTrx
        - 
          trx_dropout: 0.01
      - 
        - RandomSlice
        - 
          min_len: 600
          max_len: 600
    num_workers: 16
    batch_size: 64
  valid: 
    augmentations: 
      - 
        - RandomSlice
        - 
          min_len: 600
          max_len: 600
    num_workers: 16
    batch_size: 512
  replace_token: 
    replace_prob: 0.15
    skip_first: 1

seed_everything: 42

trainer: 
  gpus: 1
  auto_select_gpus: false
  max_epochs: 150
  checkpoint_callback: false
  deterministic: true

logger_name: rtd_model

pl_module:
  _target_: ptls.lightning_modules.rtd_module.RtdModule
  seq_encoder:
    _target_: ptls.seq_encoder.rnn_encoder.RnnSeqEncoder
    type: gru
    hidden_size: 800
    bidir: false
    trainable_starter: static
    trx_encoder: 
      _target_: ptls.trx_encoder.TrxEncoder
      norm_embeddings: false
      embeddings_noise: 0.003
      embeddings: 
        small_group: 
          in: 250
          out: 16
      numeric_values: 
        amount_rur: identity
  lr_scheduler_partial:
    _partial_: true
    _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
    patience: 15
  loss:
    _target_: ptls.loss.BCELoss
  optimizer_partial:
    _partial_: true
    _target_: torch.optim.Adam
    lr: 0.001
    weight_decay: 0.0

model_path: ${hydra:runtime.cwd}/../../artifacts/scenario_age_pred/rtd_model.p

inference_dataloader: 
  col_id: client_id
  dataset_files: 
    - ${hydra:runtime.cwd}/data/train_trx_file.parquet
    - ${hydra:runtime.cwd}/data/test_trx_file.parquet
  SeqLenLimit: 
    max_seq_len: 1600
  loader: 
    num_workers: 4
    batch_size: 1000

output: 
  path: ${hydra:runtime.cwd}/data/rtd_embeddings
  format: pickle
