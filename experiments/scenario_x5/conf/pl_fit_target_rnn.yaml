device: cuda

data_module: 
  _target_: ptls.data_load.data_module.cls_data_module.ClsDataModuleTrain
  type: map
  setup: 
    dataset_files: 
      train_data_path: ${hydra:runtime.cwd}/data/train_trx.parquet
      test_data_path: ${hydra:runtime.cwd}/data/test_trx.parquet
    col_id: client_id
    col_id_dtype: str
    col_target: age
    split_by: embeddings_validation
    fold_info: ${hydra:runtime.cwd}/conf/embeddings_validation.work/folds/folds.json
  train: 
    min_seq_len: 0
    augmentations: 
      - 
        - DropoutTrx
        - 
          trx_dropout: 0.03
      - 
        - DropDay
        - {}
      - 
        - RandomSlice
        - 
          min_len: 50
          max_len: 150
          rate_for_min: 0.9
      - 
        - AllTimeShuffle
        - {}
    num_workers: 16
    batch_size: 32
  valid: 
    augmentations: 
      - 
        - SeqLenLimit
        - 
          max_seq_len: 800
    num_workers: 8
    batch_size: 256

embedding_validation_results: 
  model_name: nn
  feature_name: target_scores
  output_path: ${hydra:runtime.cwd}/results/fit_target_results.json

seed_everything: 42

trainer: 
  gpus: 1
  auto_select_gpus: false
  max_epochs: 10
  checkpoint_callback: false
  deterministic: true

logger_name: target_scores

col_target_name: target_age

pl_module:
  _target_: ptls.seq_to_target.SequenceToTarget
  metric_list:
    accuracy:
      _target_: torchmetrics.Accuracy
      compute_on_step: false
  seq_encoder:
    _target_: ptls.seq_encoder.rnn_encoder.RnnSeqEncoder
    trx_encoder: 
      _target_: ptls.trx_encoder.TrxEncoder
      norm_embeddings: false
      embeddings_noise: 0.003
      embeddings: 
        level_3: 
          in: 200
          out: 16
        level_4: 
          in: 800
          out: 16
        segment_id: 
          in: 120
          out: 16
      numeric_values: 
        trn_sum_from_iss: identity
        netto: identity
        regular_points_received: identity
    type: gru
    hidden_size: 96
    bidir: false
    trainable_starter: static
  head:
    _target_: ptls.models.Head
    input_size: ${pl_module.seq_encoder.hidden_size}
    objective: classification
    num_classes: 4
  loss:
    _target_: torch.nn.NLLLoss
  optimizer_partial:
    _partial_: true
    _target_: torch.optim.Adam
    lr: 0.004
    weight_decay: 0.0
  lr_scheduler_partial:
    _partial_: true
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 1
    gamma: 0.85
