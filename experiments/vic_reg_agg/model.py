# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m1m985Kfds1oZPgLt_QJGbzhraOfh5X7
"""

model = CoLESModule(
      validation_metric=ptls.frames.coles.metric.BatchRecallTopK(K=4,
                                                                 metric="cosine"),
      seq_encoder=RnnSeqEncoder(
            trx_encoder=TrxEncoder(
            use_batch_norm_with_lens=True,
            norm_embeddings=False,
            embeddings_noise=0.0003,

            embeddings={
                "mcc": {"in": 100, "out": 24},
                "channel_type": {"in": 4, "out": 4},
                "currency": {"in": 4, "out": 4},
                "trx_category": {"in": 10, "out": 4}
            },

            numeric_values={
                'amount': 'identity',
            }

            ),
            type="lstm",
            hidden_size=362,
            bidir=False,
            trainable_starter="static",
      ),

      head=Head(
            use_norm_encoder=False,
            input_size=362,
      ),

      loss=Loss(
          ContrastiveLoss(
            margin=0.5,
            sampling_strategy=sampling_strategies.HardNegativePairSelector(neg_count=5),
          ),
          VICRegLoss()
      ),

      optimizer_partial=partial(
            torch.optim.Adam,
            lr=0.004,
            weight_decay=0.0
      ),

      lr_scheduler_partial=partial(
            torch.optim.lr_scheduler.StepLR,
            step_size=10,
            gamma=0.9025,
      ),
)

trainer = pl.Trainer(
    num_sanity_val_steps=0,
    gpus=1,
    auto_select_gpus=False,
    max_epochs=60,
    enable_checkpointing=False,
    deterministic=True
)

trainer.fit(model, data_module)
print(trainer.logged_metrics)